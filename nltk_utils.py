#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Aug 28 21:22:36 2022

@author: kdawg
"""
from nltk.corpus import stopwords


# Get rid of stop words and tokenize
# the text read from the source file.
def preprocess(textstring):
    s_words = stopwords.words("english")
    s_words.extend(
        # These words were manually added after running the script multiple times
        # and is a trial and error process.  Future updates would allow for this
        # to be read from a file or selected on the web page and removed
        # automatically
        [
            "include",
            "also",
            "system",
            "one",
            "risk",
            "test",
            "computer",
            "data",
            "generate",
            "including",
            "etc",
            "raw",
            "another",
            "n",
            "r",
            "x",
            "embodiment",
            "provide:",
            "values",
            "may",
            "fig",
            "time",
            "network",
            "information",
            "example",
            "least",
            "user",
            "said",
            "tag",
            "set",
            "scan",
            "computing",
            "electronic",
            "action",
            "embodiments",
            "base",
            "ip",
            "security",
            "et",
            "al",
            "device",
            "wherein",
            "based",
            "e",
            "g",
            "intensity",
            "knowledge",
            "used",
            "mg",
            "patent",
            "w",
            "claim",
            "composition",
            "quic",
            "node",
            "graph",
            "event",
            "request",
            "score",
            "context",
            "local",
            "first",
            "task",
            "control",
            "protected",
            "i",
            "ieee",
            "v",
            "k",
            "p",
            "ieee",
            "acm",
            "using",
            "readable",
            "db" "herein",
            "flow",
            "process",
            "plurality",
            "certain",
            "filed",
            "disorder",
            "certain",
            "filed",
            "use",
            "part",
            "number",
            "mice",
            "could",
            "content",
            "application",
            "sheet",
            "associated",
            "particular",
            "county",
            "herein",
            "various",
            "described",
            "instructions",
            "optimal",
            "call",
            "access",
            "connected",
            "pages",
            "results",
            "configured",
            "second",
            "level",
            "site",
            "solution",
            "histogram",
            "determine",
            "value",
            "step",
            "determined",
            "problem",
            "include",
            "within",
            "list",
            "different",
            "present",
            "stored",
            "type",
            "vol",
            "d",
            "b",
            "h",
            "determining",
            "two",
            "includes",
            "implemented",
            "state",
            "activity",
            "related",
            "received",
            "source",
            "sources",
            "additional",
            "centroid",
            "known",
            "date",
            "disclosure",
            "initial",
            "collective",
            "publication",
            "u",
            "new",
            "method",
            "c",
            "environment",
            "topics",
            "future",
            "articles",
            "like",
            "making",
            "input",
            "group",
            "entity",
            "strategy",
            "file",
            "message",
            "die",
            "media",
            "available",
            "accessed",
            "table",
            "normal",
            "unusual",
            "behavior",
            "source",
            "thus",
            "performance",
            "potential",
            "beyond",
            "robust",
            "underlay",
            "features",
            "claims",
            "rules",
            "processing",
            "continues",
            "wo",
            "events",
            "transaction",
            "address",
            "interface",
            "threshold",
            "corresponding",
            "short",
            "would",
            "due",
            "well",
            "make",
            "things",
            "products",
            "three",
            "function",
            "distance",
            "three",
            "figure",
            "zero",
            "actions",
            "take",
            "ability",
            "knight",
            "rl",
            "reward",
            "world",
            "states",
            "order",
            "unit",
            "ability",
            "classical",
            "made",
            "might",
            "year",
            "way",
            "carried",
            "activities",
            "great",
            "become",
            "act",
            "usually",
            "amount",
            "cyber",
            "political",
            "international",
            "term",
            "preference",
            "specific",
            "long",
            "company",
            "legal",
            "allow",
            "corporate",
            "examples",
            "non",
            "section",
            "discussion",
            "investments",
            "operation",
            "program",
            "ratings",
            "response",
            "pp",
            "layer",
            "independent",
            "polynomial",
            "devices",
            "internet",
            "de",
            "engine",
            "module",
            "mode",
            "smx",
        ]
    )
    # Need to lemmatize and
    stops = set(s_words)
    tokens = word_tokenize(textstring.lower())
    return [token.lower() for token in tokens if token.isalpha() and token not in stops]
